[{"/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/reportWebVitals.js":"1","/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/App.js":"2","/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/components/Navbar.js":"3","/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/components/FeaturedArt.js":"4","/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/client.js":"5","/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/index.js":"6"},{"size":362,"mtime":1606755573499,"results":"7","hashOfConfig":"8"},{"size":1221,"mtime":1606842485535,"results":"9","hashOfConfig":"8"},{"size":701,"mtime":1606821235057,"results":"10","hashOfConfig":"8"},{"size":1642,"mtime":1606857702018,"results":"11","hashOfConfig":"8"},{"size":304,"mtime":1606840318536,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1606755573498,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6vg80z",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/reportWebVitals.js",[],"/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/App.js",[],"/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/components/Navbar.js",["27","28"],"/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/components/FeaturedArt.js",["29"],"import React from 'react';\nimport './FeaturedArt.css'\nimport Tilt from 'react-tilt'\nimport withSizes from 'react-sizes'\n\nclass FeaturedArt extends React.Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return(\n<div className=\"featuredart\">\n        \n    {this.props.isMobile ? \n    \n    /* For mobile â€“ no tilting */\n    <div className=\"featuredart-container\">\n        <div className=\"featuredart-content\">\n            <div className=\"featuredart-image\" style={{backgroundImage: `url(${this.props.image})`}}/>\n        </div>\n        <div className=\"featuredart-copy\">\n            <h3 className=\"featuredart-date\">{this.props.date}</h3>\n                <h1 className=\"featuredart-title\">{this.props.title}</h1>\n                <p className=\"featuredart-description\">{this.props.description}</p>\n        </div>\n    </div> :\n    \n    /* Desktop, above 1024 â€“ tilting is on */\n    <Tilt className=\"Tilt\" options={{ max : 50 , reset: false, reverse:true, speed: 5000, scale:1}}>\n        <div className=\"Tilt-inner featuredart-content\">\n            <div className=\"featuredart-image\" style={{backgroundImage: `url(${this.props.image})`}}/>\n            <div className=\"featuredart-copy\">\n            <h3 className=\"featuredart-date\">{this.props.date}</h3>\n            <h1 className=\"featuredart-title\">{this.props.title}</h1>\n            <p className=\"featuredart-description\">{this.props.description}</p>\n        </div>\n        </div> \n        </Tilt>}\n        </div>\n        )\n    }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n    isMobile: width < 1024,\n})\n\nexport default withSizes(mapSizesToProps)(FeaturedArt)","/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/client.js",[],"/Users/juauz/Documents/code ðŸ› /siobhanlynchcom/src/index.js",[],{"ruleId":"30","severity":1,"message":"31","line":12,"column":17,"nodeType":"32","endLine":12,"endColumn":51},{"ruleId":"30","severity":1,"message":"31","line":13,"column":17,"nodeType":"32","endLine":13,"endColumn":61},{"ruleId":"33","severity":1,"message":"34","line":7,"column":5,"nodeType":"35","messageId":"36","endLine":9,"endColumn":6},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]